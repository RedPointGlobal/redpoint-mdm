global:
  # Namespace where the application will be deployed
  namespace: redpoint-mdm

replicaCount: 1

# Name of the application
app_name: redpoint-mdm

# Service name for Java API
java_api_service: rp-mdm-core

mongodb:
  # Enable DEMO MongoDB (for demonstration and testing only)
  enabled: true
  # Connection string for MongoDB (Defaults to the DEMO MongDB)
  # For Production, please replace this connection string with the one for your production MongoDB instance
  connection_string: mongodb://mongoadmin:9vDR1p8Q1KEO@mongodb:27017/admin?authSource=admin

nginx:
  # Enable Nginx
  enabled: true
  # Internal 
  internal: true 
  # Name of the subnet
  subnet_name: snet-rgoc-nonprod-eus2-aks
  # Cloud provider where Nginx is deployed
  cloudProvider: azure

names:
  # Service names for different components
  ui: rp-mdm-ui
  core: rp-mdm-core
  auth: rp-mdm-auth
  perm: rp-mdm-perm
  user: rp-mdm-user
  log: rp-mdm-log

images:
  repository:
    # Docker image repositories for different components
    ui: redpointglobal/rp-mdm-ui
    core: redpointglobal/rp-mdm-core
    auth: redpointglobal/rp-mdm-authentication
    perm: redpointglobal/rp-mdm-permission
    user: redpointglobal/rp-mdm-user
    log: redpointglobal/rp-mdm-log
  tag: v1.6.1-RELEASE
  pullPolicy: Always

imagePullSecrets: docker-io 
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  names:
    # Service account names for different components
    ui: rp-mdm-ui
    core: rp-mdm-core
    auth: rp-mdm-auth
    perm: rp-mdm-perm
    user: rp-mdm-user
    log: rp-mdm-log

podAnnotations: {}

podSecurityContext: {}

securityContext: 
   # Security context settings for pods
   seccompProfile:
     type: RuntimeDefault
   runAsNonRoot: true
   runAsUser: 1000
   runAsGroup: 3000
   fsGroup: 2000

service:
  names:
    # Service names for different components
    ui: rp-mdm-ui
    core: rp-mdm-core
    auth: rp-mdm-auth
    perm: rp-mdm-perm
    user: rp-mdm-user
    log: rp-mdm-log
  type: ClusterIP
  port:
    # Port mappings for different services
    ui: 9090
    core: 9902
    auth: 9901
    user: 9903
    perm: 9908
    log: 9904
    https: 80
  protocol: TCP

ldap:
  # LDAP configuration
  active_dir_url: ldap://example.com 
  active_dir_domain: DC=example,DC=com 

ingress:
  # Ingress settings
  host_domain: example.com
  internal: false
  subnet_name: snet-rgoc-nonprod-eus2-aks 
  name:
    # Ingress names for different components
    ui: rp-mdm-ui
    core: rp-mdm-core
    auth: rp-mdm-auth
  enabled: true
  host:
    # Hostnames for different components
    ui: rp-mdm-ui
    core: rp-mdm-core
    auth: rp-mdm-auth
  tls_secret_name: ingress-tls 
  acm_cert_arn: 

autoscaling:
  # Autoscaling settings
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeConstraint: enabled
nodeSelector:
  # Node selector settings
  pool: rgoc-eus2
tolerations:
  # Tolerations settings
  - effect: NoSchedule
    key: pool
    operator: Equal
    value: rgoc-eus2
