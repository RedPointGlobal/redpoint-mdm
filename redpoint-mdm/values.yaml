global:
  namespace: redpoint-mdm
  cloudProvider: azure # or google or amazon 

replicaCount: 1

app_name: redpoint-mdm
namespace: redpoint-mdm
mongodb_connection_secret: mongodb-conn-string # A kubernetes secret containing the mongodb connection string.
createTestMongo: true  # Set to false in production and provide a connection string to your production mongo cluster
java_api_service: rp-mdm-core

mongodb:
  enabled: true
  connection_string: mongodb://mongoadmin:9vDR1p8Q1KEO@mongodb:27017/admin?authSource=admin

nginx:
  enabled: true

names:
  ui: rp-mdm-ui
  core: rp-mdm-core
  auth: rp-mdm-auth
  perm: rp-mdm-perm
  user: rp-mdm-user
  log: rp-mdm-log

images:
  repository:
    ui: redpointglobal/rp-mdm-ui
    core: redpointglobal/rp-mdm-core
    auth: redpointglobal/rp-mdm-authentication
    perm: redpointglobal/rp-mdm-permission
    user: redpointglobal/rp-mdm-user
    log: redpointglobal/rp-mdm-log
  tag: v1.5.1-RELEASE
  pullPolicy: Always

imagePullSecrets: docker-io # # A kubernetes secret containing your docker hub credentials
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  names:
    ui: rp-mdm-ui
    core: rp-mdm-core
    auth: rp-mdm-auth
    perm: rp-mdm-perm
    user: rp-mdm-user
    log: rp-mdm-log

podAnnotations: {}

podSecurityContext: {}

securityContext: 
   seccompProfile:
     type: RuntimeDefault
   runAsNonRoot: true
   runAsUser: 1000
   runAsGroup: 3000
   fsGroup: 2000

service:
  names:
    ui: rp-mdm-ui
    core: rp-mdm-core
    auth: rp-mdm-auth
    perm: rp-mdm-perm
    user: rp-mdm-user
    log: rp-mdm-log
  type: ClusterIP
  port:
    ui: 9090
    core: 9902
    auth: 9901
    user: 9903
    perm: 9908
    log: 9904
    https: 80
  protocol: TCP


ldap:
  active_dir_url: ldap://example.com # For enabling Active Directory authentication, update the value for your environment
  active_dir_domain: DC=example,DC=com # For enabling Active Directory authentication, update the value for your environment

ingress:
  host_domain: rdpnt.dev
  internal: false
  subnet_name: snet-rgoc-nonprod-eus2-aks #<replace with your target subnet name>
  name:
    ui: rp-mdm-ui-ingress
    core: rp-mdm-core-ingress
    auth: rp-mdm-auth-ingress
  enabled: true
  host:
    ui: rp-mdm-ui
    core: rp-mdm-core
    auth: rp-mdm-auth
  tls_secret_name: mdm-tls # Kubernetes secret containing your TLS certificates
  acm_cert_arn: arn:aws:acm:us-east-1:005309590283:certificate/285b5562-94c1-4847-8761-38f7dda5533c
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: "/"
    nginx.ingress.kubernetes.io/connection-proxy-header: "keep-alive"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

tolerations: []
affinity: {}
