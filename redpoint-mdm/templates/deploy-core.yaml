apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.names.core }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.names.core }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.names.core }}
  template:
    metadata:
      labels:
        app: {{ .Values.names.core }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      serviceAccountName: {{ .Values.serviceAccount.names.core }}
      containers:
        - name: {{ .Values.names.core }}         
          image:  "{{ .Values.images.repository.core }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port.core }}
          env:
          - name: MDM_MONGO_URI
            valueFrom:
              secretKeyRef:
                name: "mongodb-conn-string"
                key: MONGO_CONNECTION_STRING
          - name: _JAVA_OPTIONS
            value: "-Xms4g -Xmx8g"
          resources:
            limits:
              cpu: "5000m"   
              memory: "8Gi"  
            requests:
              cpu: "2000m"     
              memory: "4Gi"
          livenessProbe:
            httpGet:
              path: /mdm/db/ping
              port: 9902
            initialDelaySeconds: 15
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /mdm/db/ping
              port: 9902
            initialDelaySeconds: 15
            periodSeconds: 10
          volumeMounts:
            - name: rpmdm-core-properties
              mountPath: /usr/local/share/redpointmdm/
      volumes:
        - name: rpmdm-core-properties
          configMap:
            name: rpmdm-core-properties
      {{- if eq .Values.global.nodeConstraint "enabled" }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}