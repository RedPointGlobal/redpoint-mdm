---
# Source: redpoint-mdm/charts/nginx/templates/nginx.yaml
# Source: ingress-nginx/templates/controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: 1.5.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: nginx-redpoint-mdm
  namespace: redpoint-mdm
automountServiceAccountToken: true
---
# Source: redpoint-mdm/templates/svs-acc-auth.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rp-mdm-auth
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-auth
---
# Source: redpoint-mdm/templates/svs-acc-core.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rp-mdm-core
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-core
---
# Source: redpoint-mdm/templates/svs-acc-log.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rp-mdm-log
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-log
---
# Source: redpoint-mdm/templates/svs-acc-perm.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rp-mdm-perm
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-perm
---
# Source: redpoint-mdm/templates/svs-acc-ui.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rp-mdm-ui
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-ui
---
# Source: redpoint-mdm/templates/svs-acc-user.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rp-mdm-user
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-user
---
# Source: redpoint-mdm/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-conn-string
  namespace: redpoint-mdm
data:
  MONGO_CONNECTION_STRING: bW9uZ29kYjovL21vbmdvYWRtaW46OXZEUjFwOFExS0VPQG1vbmdvZGI6MjcwMTcvYWRtaW4/YXV0aFNvdXJjZT1hZG1pbg==
type: Opaque
---
# Source: redpoint-mdm/charts/nginx/templates/nginx.yaml
# Source: ingress-nginx/templates/controller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.4.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: 1.5.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: nginx-redpoint-mdm
  namespace: redpoint-mdm
data:
  allow-snippet-annotations: 'true'
  use-http2: "true"
  proxy-body-size: "99m"
---
# Source: redpoint-mdm/charts/nginx/templates/nginx.yaml
# Source: ingress-nginx/templates/controller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.4.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: 1.5.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: tcp-services
  namespace: redpoint-mdm
data:
  9901: "redpoint-mdm/rp-mdm-auth-tcp:9901"
  9902: "redpoint-mdm/rp-mdm-core-tcp:9902"
---
# Source: redpoint-mdm/templates/cfgmap-auth.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: rpmdm-auth-properties
  namespace: redpoint-mdm
data:
  mdm_authentication_service.properties: |
    authentication.active_dir.url=ldap://example.com
    authentication.active_dir.domain=DC=example,DC=com
    authentication.port=9901
    user.url=http://rp-mdm-user:80
    log.url=http://rp-mdm-log:80
    trace_messages=false
---
# Source: redpoint-mdm/templates/cfgmap-core.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: rpmdm-core-properties
  namespace: redpoint-mdm
data:
  redpointmdm.properties: |
    rpmdm.service.host=0.0.0.0
    rpmdm.service.port=9902
    rpmdm.authentication.url=http://rp-mdm-auth:80/mdm
    rpmdm.usergroup.url=http://rp-mdm-user:80/mdm
    rpmdm.permission.url=http://rp-mdm-perm:80/mdm
    rpmdm.log.url=http://rp-mdm-log:80/mdm
    rpmdm.service.logging=true
---
# Source: redpoint-mdm/templates/cfgmap-log.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: rpmdm-log-properties
  namespace: redpoint-mdm
data:
  redpointmdm.properties: |
    mdm.port=9904
    rpmdm.service.logging=true
---
# Source: redpoint-mdm/templates/cfgmap-perm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: rpmdm-perm-properties
  namespace: redpoint-mdm
data:
  mdm_permission_service.properties: |
    permission.port=9908
    user.url=http://rp-mdm-user:80
    log.url=http://rp-mdm-log:80
    authentication.url=http://rp-mdm-auth:80
    trace_messages=false
---
# Source: redpoint-mdm/templates/cfgmap-ui.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: rpmdm-ui-properties
  namespace: redpoint-mdm
data:
  mdm_web_service.properties: |
    mdm.port=9090
    authentication.url=http://rp-mdm-auth:80
    user.url=http://rp-mdm-user:80
    log.url=http://rp-mdm-log:80
    core.url=http://rp-mdm-core:80
    permission.url=http://rp-mdm-perm:80
    trace_messages=true
---
# Source: redpoint-mdm/templates/cfgmap-ui.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: log4js-config
  namespace: redpoint-mdm
data:
  log4js_config.json: |
    {
    "appenders": {"console": { "type": "console" }},
     "categories": {
     "MDM Server": { "appenders": ["console"], "level": "debug" },
     "default": { "appenders": ["console"], "level": "debug" }
      }
    }
---
# Source: redpoint-mdm/templates/cfgmap-user.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: rpmdm-user-properties
  namespace: redpoint-mdm
data:
  mdm_user_service.properties: |
    user.port=9903
    authentication.url=http://rp-mdm-auth:80
    log.url=http://rp-mdm-log:80
    trace_messages=false
---
# Source: redpoint-mdm/charts/nginx/templates/nginx.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.5.1
  name: nginx-redpoint-mdm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get
---
# Source: redpoint-mdm/charts/nginx/templates/nginx.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.5.1
  name: nginx-redpoint-mdm
  namespace: redpoint-mdm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-redpoint-mdm
subjects:
- kind: ServiceAccount
  name: nginx-redpoint-mdm
  namespace: redpoint-mdm
---
# Source: redpoint-mdm/charts/nginx/templates/nginx.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.5.1
  name: nginx-redpoint-mdm
  namespace: redpoint-mdm
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - ingress-nginx-leader
  resources:
  - configmaps
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get
---
# Source: redpoint-mdm/charts/nginx/templates/nginx.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.5.1
  name: nginx-redpoint-mdm
  namespace: redpoint-mdm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-redpoint-mdm
subjects:
- kind: ServiceAccount
  name: nginx-redpoint-mdm
  namespace: redpoint-mdm
---
# Source: redpoint-mdm/charts/mongodb/templates/mongodb.yaml
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: redpoint-mdm
spec:
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: ClusterIP
---
# Source: redpoint-mdm/charts/nginx/templates/nginx.yaml
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: "true" 
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:005309590283:certificate/285b5562-94c1-4847-8761-38f7dda5533c
  labels:
    helm.sh/chart: ingress-nginx-4.4.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: 1.5.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: nginx-redpoint-mdm
  namespace: redpoint-mdm
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ipFamilyPolicy: SingleStack
  ipFamilies:
    - IPv4
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
      appProtocol: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
      appProtocol: https
    - name: mdm-auth-tcp
      port: 9901
      targetPort: 9901
    - name: mdm-core-tcp
      port: 9902
      targetPort: 9902
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/component: controller
---
# Source: redpoint-mdm/templates/service-auth.yaml
apiVersion: v1
kind: Service
metadata:
  name: rp-mdm-auth
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-auth 
spec:
  ports:
    - port: 80
      targetPort: 9901
      protocol: TCP
      name: rp-mdm-auth
  selector:
    app: rp-mdm-auth
---
# Source: redpoint-mdm/templates/service-auth.yaml
apiVersion: v1
kind: Service
metadata:
  name: rp-mdm-auth-tcp
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-auth 
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"    
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'    
    service.beta.kubernetes.io/aws-load-balancer-type: nlb    
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"
spec:
  ports:
    - port: 9901
      targetPort: 9901
      protocol: TCP
  selector:
    app: rp-mdm-auth
  type: LoadBalancer
---
# Source: redpoint-mdm/templates/service-core.yaml
apiVersion: v1
kind: Service
metadata:
  name: rp-mdm-core
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-core 
spec:
  ports:
    - port: 80
      targetPort: 9902
      protocol: TCP
      name: rp-mdm-core
  selector:
    app: rp-mdm-core
---
# Source: redpoint-mdm/templates/service-core.yaml
apiVersion: v1
kind: Service
metadata:
  name: rp-mdm-core-tcp
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-core 
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"    
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'    
    service.beta.kubernetes.io/aws-load-balancer-type: nlb    
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"
spec:
  ports:
    - port: 9902
      targetPort: 9902
      protocol: TCP
  selector:
    app: rp-mdm-core
  type: LoadBalancer
---
# Source: redpoint-mdm/templates/service-log.yaml
apiVersion: v1
kind: Service
metadata:
  name: rp-mdm-log
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-log 
spec:
  ports:
    - port: 80
      targetPort: 9904
      protocol: TCP
      name: rp-mdm-log
  selector:
    app: rp-mdm-log
---
# Source: redpoint-mdm/templates/service-perm.yaml
apiVersion: v1
kind: Service
metadata:
  name: rp-mdm-perm
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-perm 
spec:
  ports:
    - port: 80
      targetPort: 9908
      protocol: TCP
      name: rp-mdm-perm
  selector:
    app: rp-mdm-perm
---
# Source: redpoint-mdm/templates/service-ui.yaml
apiVersion: v1
kind: Service
metadata:
  name: rp-mdm-ui
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-ui 
spec:
  ports:
    - port: 80
      targetPort: 9090
      name: rp-mdm-ui
  selector:
    app: rp-mdm-ui
---
# Source: redpoint-mdm/templates/service-user.yaml
apiVersion: v1
kind: Service
metadata:
  name: rp-mdm-user
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-user 
spec:
  ports:
    - port: 80
      targetPort: 9903
      protocol: TCP
      name: rp-mdm-user
  selector:
    app: rp-mdm-user
---
# Source: redpoint-mdm/charts/mongodb/templates/mongodb.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: redpoint-mdm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:5.0
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: mongoadmin
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: 9vDR1p8Q1KEO
      volumes:
        - name: mongodb-data
          hostPath:
            path: /mongo
            type: DirectoryOrCreate
---
# Source: redpoint-mdm/charts/nginx/templates/nginx.yaml
# Source: ingress-nginx/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.4.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: 1.5.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: nginx-redpoint-mdm
  namespace: redpoint-mdm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/component: controller
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/component: controller
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - name: controller
          image: registry.k8s.io/ingress-nginx/controller:v1.5.1@sha256:4ba73c697770664c1e00e9f968de14e08f606ff961c76e5d7033a4a9c593c629
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown
          args:
            - /nginx-ingress-controller
            - --publish-service=redpoint-mdm/nginx-redpoint-mdm
            - --election-id=ingress-nginx-leader
            - --controller-class=k8s.io/ingress-nginx
            - --configmap=redpoint-mdm/nginx-redpoint-mdm
            - --tcp-services-configmap=redpoint-mdm/tcp-services
#            - --default-ssl-certificate=redpoint-mdm/mdm-tls
            - --watch-namespace=redpoint-mdm
          securityContext:
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            runAsUser: 101
            allowPrivilegeEscalation: true
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 90Mi
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: nginx-redpoint-mdm
      terminationGracePeriodSeconds: 300
---
# Source: redpoint-mdm/templates/deploy-auth.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rp-mdm-auth
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rp-mdm-auth
  template:
    metadata:
      labels:
        app: rp-mdm-auth
    spec:
      imagePullSecrets:
        - name: docker-io
      serviceAccountName: rp-mdm-auth
      containers:
        - name: rp-mdm-auth
          image: "redpointglobal/rp-mdm-authentication:v1.5.1-RELEASE"
          imagePullPolicy: Always
          ports:
            - containerPort: 9901
          env:
          - name: MDM_MONGO_URI
            valueFrom:
              secretKeyRef:
                name: mongodb-conn-string
                key: MONGO_CONNECTION_STRING
          - name: JAVA_API_SERVICE
            value: rp-mdm-core          
          volumeMounts:
            - name: rpmdm-auth-properties
              mountPath: /usr/local/share/redpointmdm/
            - name: log4js-config
              mountPath: /usr/local/app/authentication-service/log4js_config.json
              subPath: log4js_config.json
      volumes:
        - name: rpmdm-auth-properties
          configMap:
            name: rpmdm-auth-properties
        - name: log4js-config
          configMap:
            name: log4js-config
---
# Source: redpoint-mdm/templates/deploy-core.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rp-mdm-core
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rp-mdm-core
  template:
    metadata:
      labels:
        app: rp-mdm-core
    spec:
      imagePullSecrets:
        - name: docker-io
      serviceAccountName: rp-mdm-core
      containers:
        - name: rp-mdm-core         
          image:  "redpointglobal/rp-mdm-core:v1.5.1-RELEASE"
          imagePullPolicy: Always
          ports:
            - containerPort: 9902
          env:
          - name: MDM_MONGO_URI
            valueFrom:
              secretKeyRef:
                name: mongodb-conn-string
                key: MONGO_CONNECTION_STRING
          volumeMounts:
            - name: rpmdm-core-properties
              mountPath: /usr/local/share/redpointmdm/
      volumes:
        - name: rpmdm-core-properties
          configMap:
            name: rpmdm-core-properties
---
# Source: redpoint-mdm/templates/deploy-log.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rp-mdm-log
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-log
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rp-mdm-log
  template:
    metadata:
      labels:
        app: rp-mdm-log
    spec:
      imagePullSecrets:
        - name: docker-io
      serviceAccountName: rp-mdm-log
      containers:
        - name: rp-mdm-log         
          image:  "redpointglobal/rp-mdm-log:v1.5.1-RELEASE"
          imagePullPolicy: Always
          ports:
            - containerPort: 9904
          env:
          - name: MDM_MONGO_URI
            valueFrom:
              secretKeyRef:
                name: mongodb-conn-string
                key: MONGO_CONNECTION_STRING
          volumeMounts:
            - name: rpmdm-log-properties
              mountPath: /usr/local/share/redpointmdm/
      volumes:
        - name: rpmdm-log-properties
          configMap:
            name: rpmdm-log-properties
---
# Source: redpoint-mdm/templates/deploy-perm.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rp-mdm-perm
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-perm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rp-mdm-perm
  template:
    metadata:
      labels:
        app: rp-mdm-perm
    spec:
      imagePullSecrets:
        - name: docker-io
      serviceAccountName: rp-mdm-perm
      containers:
        - name: rp-mdm-perm
          image: "redpointglobal/rp-mdm-permission:v1.5.1-RELEASE"
          imagePullPolicy: Always
          ports:
            - containerPort: 9908
          env:
          - name: MDM_MONGO_URI
            valueFrom:
              secretKeyRef:
                name: mongodb-conn-string
                key: MONGO_CONNECTION_STRING
          - name: JAVA_API_SERVICE
            value: rp-mdm-core
          volumeMounts:
            - name: rpmdm-perm-properties
              mountPath: /usr/local/share/redpointmdm/
            - name: log4js-config
              mountPath: /usr/local/app/permission-service/log4js_config.json
              subPath: log4js_config.json
      volumes:
        - name: rpmdm-perm-properties
          configMap:
            name: rpmdm-perm-properties
        - name: log4js-config
          configMap:
            name: log4js-config
---
# Source: redpoint-mdm/templates/deploy-ui.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rp-mdm-ui
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rp-mdm-ui
  template:
    metadata:
      labels:
        app: rp-mdm-ui
    spec:
      imagePullSecrets:
        - name: docker-io
      serviceAccountName: rp-mdm-ui
      containers:
        - name: rp-mdm-ui         
          image:  "redpointglobal/rp-mdm-ui:v1.5.1-RELEASE"
          imagePullPolicy: Always
          ports:
            - containerPort: 9090
          env:
          - name: MDM_MONGO_URI
            valueFrom:
              secretKeyRef:
                name: mongodb-conn-string
                key: MONGO_CONNECTION_STRING
          volumeMounts:
            - name: rpmdm-ui-properties
              mountPath: /usr/local/share/redpointmdm/
            - name: log4js-config
              mountPath: /usr/local/app/mdm-ui/log4js_config.json
              subPath: log4js_config.json
      volumes:
        - name: rpmdm-ui-properties
          configMap:
            name: rpmdm-ui-properties
        - name: log4js-config
          configMap:
            name: log4js-config
---
# Source: redpoint-mdm/templates/deploy-user.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rp-mdm-user
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-user
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rp-mdm-user
  template:
    metadata:
      labels:
        app: rp-mdm-user
    spec:
      imagePullSecrets:
        - name: docker-io
      serviceAccountName: rp-mdm-user
      containers:
        - name: rp-mdm-user
          image: "redpointglobal/rp-mdm-user:v1.5.1-RELEASE"
          imagePullPolicy: Always
          ports:
            - containerPort: 9903
          env:
          - name: MDM_MONGO_URI
            valueFrom:
              secretKeyRef:
                name: mongodb-conn-string
                key: MONGO_CONNECTION_STRING
          - name: JAVA_API_SERVICE
            value: rp-mdm-core
          volumeMounts:
            - name: rpmdm-user-properties
              mountPath: /usr/local/share/redpointmdm/
            - name: log4js-config
              mountPath: /usr/local/app/user-service/log4js_config.json
              subPath: log4js_config.json
      volumes:
        - name: rpmdm-user-properties
          configMap:
            name: rpmdm-user-properties
        - name: log4js-config
          configMap:
            name: log4js-config
---
# Source: redpoint-mdm/charts/nginx/templates/nginx.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.4.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: 1.5.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: redpoint-mdm
spec:
  controller: k8s.io/ingress-nginx
---
# Source: redpoint-mdm/templates/ingress-ui.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mdm-ui-ingress
  namespace: redpoint-mdm
  annotations:
spec:
  tls:
  - hosts:
      - rp-mdm-ui.rdpnt.dev
    secretName: mdm-tls
  ingressClassName: redpoint-mdm
  rules:
  - host: rp-mdm-ui.rdpnt.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rp-mdm-ui
            port:
              number: 80
